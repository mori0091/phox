trait Eq2 a {
    eq : a -> a -> Bool;
    neq: a -> a -> Bool;
};

impl Eq2 Int {
    eq  = \a.\b. @{Eq Int}.(==) a b;
    neq = \a.\b. @{Eq Int}.(!=) a b;
};

let x = eq 1 1 ; // => true        (discarded)
let y = eq 1   ; // => \a. 1 == a  (discarded)
(x, y)           // => (true, <closure>): (Bool, Int -> Bool)
// eq            // unbound variable: eq  // error
